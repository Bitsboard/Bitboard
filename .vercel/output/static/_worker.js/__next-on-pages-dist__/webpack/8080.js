var a={},c=(n,s,i)=>(a.__chunk_8080=(D,r,t)=>{"use strict";t.d(r,{_:()=>T});var E=t(8084);async function T(A){console.log("\u{1F50D} Admin Utility: Attempting to get database connection...");let e=await(0,E.ZA)();if(!e)throw console.error("\u{1F50D} Admin Utility: Failed to get database connection"),Error("no_db");console.log("\u{1F50D} Admin Utility: Database connection established successfully"),await e.prepare("CREATE TABLE IF NOT EXISTS users (id TEXT PRIMARY KEY, email TEXT UNIQUE, username TEXT UNIQUE, sso TEXT, verified INTEGER DEFAULT 0, is_admin INTEGER DEFAULT 0, banned INTEGER DEFAULT 0, created_at INTEGER NOT NULL, image TEXT)").run();try{await e.prepare("ALTER TABLE users ADD COLUMN is_admin INTEGER DEFAULT 0").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN banned INTEGER DEFAULT 0").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN last_login_at INTEGER").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN ban_reason TEXT").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN ban_expires_at INTEGER").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN rating INTEGER DEFAULT 0").run()}catch{}try{await e.prepare("ALTER TABLE users ADD COLUMN deals INTEGER DEFAULT 0").run()}catch{}return console.log("\u{1F50D} Admin Utility: Schema setup completed"),e}},a);export{c as __getNamedExports};

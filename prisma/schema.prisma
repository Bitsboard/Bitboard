generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  handle    String   @unique
  image     String?
  createdAt DateTime @default(now())
  rating    Float    @default(5)
  deals     Int      @default(0)

  listings  Listing[]
  messages  Message[] @relation("UserMessages")
}

model Listing {
  id           String   @id @default(cuid())
  title        String
  description  String
  priceSats    Int
  category     String
  adType       String   // "sell" | "want"
  location     String
  lat          Float
  lng          Float
  images       String[]
  boostedUntil DateTime?
  createdAt    DateTime @default(now())

  seller   User   @relation(fields: [sellerId], references: [id])
  sellerId String

  chats    Chat[]
  escrow   Escrow?
}

model Chat {
  id        String   @id @default(cuid())
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId String
  buyer     User     @relation(fields: [buyerId], references: [id])
  buyerId   String
  seller    User     @relation(fields: [sellerId], references: [id])
  sellerId  String
  createdAt DateTime @default(now())

  messages  Message[]
}

model Message {
  id        String   @id @default(cuid())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  from      User     @relation("UserMessages", fields: [fromId], references: [id])
  fromId    String
  text      String
  createdAt DateTime @default(now())
}

enum EscrowStatus {
  PROPOSED
  FUNDED
  RELEASED
  REFUND_REQUESTED
  REFUNDED
  DISPUTED
}

model Escrow {
  id          String       @id @default(cuid())
  listing     Listing      @relation(fields: [listingId], references: [id])
  listingId   String       @unique
  buyer       User         @relation(fields: [buyerId], references: [id])
  buyerId     String
  seller      User         @relation(fields: [sellerId], references: [id])
  sellerId    String
  amountSats  Int
  feeSats     Int
  holdInvoice String
  status      EscrowStatus @default(PROPOSED)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model SavedSearch {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  name        String
  query       String?
  category    String?
  adType      String?
  centerLat   Float
  centerLng   Float
  radiusKm    Int
  notify      Boolean  @default(true)
  lastOpened  DateTime?
}

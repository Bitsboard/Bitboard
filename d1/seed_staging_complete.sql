-- Complete Seed Staging Database
-- Generates remaining data to reach 200 users and 2000 listings
-- Run with: wrangler d1 execute bitsbarter-staging --file=./d1/seed_staging_complete.sql

PRAGMA foreign_keys = OFF;

-- ============================================================================
-- GENERATE REMAINING 190 USERS (to reach 200 total)
-- ============================================================================

-- Generate 190 more users with realistic data
INSERT INTO users (id, email, username, sso, verified, is_admin, banned, created_at, image, thumbs_up, deals, last_active, has_chosen_username, balance)
SELECT 
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) ||
    substr('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 62 + 1, 1) as id,
    'user' || (rowid + 11) || '@example.com' as email,
    'User' || (rowid + 11) as username,
    CASE (rowid % 3) WHEN 0 THEN 'google' WHEN 1 THEN 'apple' ELSE 'facebook' END as sso,
    CASE WHEN rowid < 171 THEN 1 ELSE 0 END as verified,
    0 as is_admin,
    0 as banned,
    strftime('%s','now') - (random() % 365) * 86400 as created_at,
    'https://images.unsplash.com/photo-' || (1500000000 + random() % 100000000) || '?w=150&h=150&fit=crop&crop=face' as image,
    random() % 100 as thumbs_up,
    random() % 50 as deals,
    strftime('%s','now') - (random() % 30) * 86400 as last_active,
    1 as has_chosen_username,
    random() % 10000000 as balance
FROM (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t1,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t2,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t3,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t4,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t5,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t6,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t7,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t8,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t9,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t10,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t11,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t12,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t13,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t14,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t15,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t16,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t17,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t18,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t19
WHERE rowid < 190;

-- ============================================================================
-- GENERATE REMAINING 1990 LISTINGS (to reach 2000 total)
-- ============================================================================

-- Generate 1990 more listings with realistic data
INSERT INTO listings (title, description, category, ad_type, location, lat, lng, image_url, price_sat, pricing_type, posted_by, boosted_until, created_at, updated_at, status, views)
SELECT 
    CASE (rowid % 15)
        WHEN 0 THEN 'Antminer S' || (19 + random() % 3) || ' Pro ' || (100 + random() % 50) || 'TH/s Bitcoin Miner'
        WHEN 1 THEN 'GPU Mining Rig - ' || (4 + random() % 6) || 'x RTX ' || (3060 + random() % 5 * 10)
        WHEN 2 THEN 'MacBook Pro M' || (1 + random() % 3) || ' ' || (13 + random() % 4) || '" ' || (256 + random() % 3 * 128) || 'GB'
        WHEN 3 THEN 'iPhone ' || (13 + random() % 3) || ' Pro Max ' || (128 + random() % 4 * 128) || 'GB'
        WHEN 4 THEN 'Gaming PC RTX ' || (3060 + random() % 5 * 10) || ' ' || CASE (random() % 3) WHEN 0 THEN 'Intel' WHEN 1 THEN 'AMD' ELSE 'Ryzen' END
        WHEN 5 THEN 'Web Development Services - ' || CASE (random() % 3) WHEN 0 THEN 'React' WHEN 1 THEN 'Node.js' ELSE 'Python' END
        WHEN 6 THEN 'Smart Home Security System - ' || CASE (random() % 3) WHEN 0 THEN '4K Cameras' WHEN 1 THEN 'Motion Sensors' ELSE 'Mobile App' END
        WHEN 7 THEN 'Garden Tools Collection - Professional Grade'
        WHEN 8 THEN 'Office Furniture Set - ' || CASE (random() % 3) WHEN 0 THEN 'Ergonomic' WHEN 1 THEN 'Modern' ELSE 'Classic' END
        WHEN 9 THEN 'Sports Equipment - ' || CASE (random() % 3) WHEN 0 THEN 'Fitness' WHEN 1 THEN 'Outdoor' ELSE 'Team Sports' END
        WHEN 10 THEN 'Camera Equipment - ' || CASE (random() % 3) WHEN 0 THEN 'DSLR' WHEN 1 THEN 'Mirrorless' ELSE 'Lenses' END
        WHEN 11 THEN 'Audio Equipment - ' || CASE (random() % 3) WHEN 0 THEN 'Studio' WHEN 1 THEN 'Live Sound' ELSE 'Home Audio' END
        WHEN 12 THEN 'Kitchen Appliances - ' || CASE (random() % 3) WHEN 0 THEN 'Professional' WHEN 1 THEN 'Smart Home' ELSE 'Vintage' END
        WHEN 13 THEN 'Furniture - ' || CASE (random() % 3) WHEN 0 THEN 'Living Room' WHEN 1 THEN 'Bedroom' ELSE 'Dining' END
        ELSE 'Collectibles - ' || CASE (random() % 3) WHEN 0 THEN 'Gaming' WHEN 1 THEN 'Sports' ELSE 'Entertainment' END
    END as title,
    'High-quality item in excellent condition. Perfect for ' || CASE (rowid % 3) WHEN 0 THEN 'beginners' WHEN 1 THEN 'professionals' ELSE 'enthusiasts' END || '. Includes all accessories and documentation. ' || CASE (random() % 2) WHEN 0 THEN 'Great value for money.' ELSE 'Rare find, don\'t miss out!' END as description,
    CASE (rowid % 7)
        WHEN 0 THEN 'Mining Gear'
        WHEN 1 THEN 'Electronics'
        WHEN 2 THEN 'Services'
        WHEN 3 THEN 'Home & Garden'
        WHEN 4 THEN 'Office'
        WHEN 5 THEN 'Sports & Outdoors'
        ELSE 'Games & Hobbies'
    END as category,
    CASE (rowid % 3) WHEN 0 THEN 'sell' WHEN 1 THEN 'want' ELSE 'sell' END as ad_type,
    CASE (rowid % 25)
        WHEN 0 THEN 'Austin, TX' WHEN 1 THEN 'Miami, FL' WHEN 2 THEN 'Denver, CO' WHEN 3 THEN 'Seattle, WA' WHEN 4 THEN 'New York, NY'
        WHEN 5 THEN 'Los Angeles, CA' WHEN 6 THEN 'San Francisco, CA' WHEN 7 THEN 'Chicago, IL' WHEN 8 THEN 'Boston, MA' WHEN 9 THEN 'Phoenix, AZ'
        WHEN 10 THEN 'Portland, OR' WHEN 11 THEN 'Nashville, TN' WHEN 12 THEN 'Las Vegas, NV' WHEN 13 THEN 'Orlando, FL' WHEN 14 THEN 'Dallas, TX'
        WHEN 15 THEN 'Houston, TX' WHEN 16 THEN 'Atlanta, GA' WHEN 17 THEN 'Philadelphia, PA' WHEN 18 THEN 'Detroit, MI' WHEN 19 THEN 'Minneapolis, MN'
        WHEN 20 THEN 'Cleveland, OH' WHEN 21 THEN 'Kansas City, MO' WHEN 22 THEN 'Columbus, OH' WHEN 23 THEN 'Charlotte, NC' WHEN 24 THEN 'Indianapolis, IN'
    END as location,
    CASE (rowid % 25)
        WHEN 0 THEN 30.2672 WHEN 1 THEN 25.7617 WHEN 2 THEN 39.7392 WHEN 3 THEN 47.6062 WHEN 4 THEN 40.7128
        WHEN 5 THEN 34.0522 WHEN 6 THEN 37.7749 WHEN 7 THEN 41.8781 WHEN 8 THEN 42.3601 WHEN 9 THEN 33.4484
        WHEN 10 THEN 45.5152 WHEN 11 THEN 36.1627 WHEN 12 THEN 36.1699 WHEN 13 THEN 28.5383 WHEN 14 THEN 32.7767
        WHEN 15 THEN 29.7604 WHEN 16 THEN 33.7490 WHEN 17 THEN 39.9526 WHEN 18 THEN 42.3314 WHEN 19 THEN 44.9778
        WHEN 20 THEN 41.4993 WHEN 21 THEN 39.0997 WHEN 22 THEN 39.9612 WHEN 23 THEN 35.2271 WHEN 24 THEN 39.7684
    END as lat,
    CASE (rowid % 25)
        WHEN 0 THEN -97.7431 WHEN 1 THEN -80.1918 WHEN 2 THEN -104.9903 WHEN 3 THEN -122.3321 WHEN 4 THEN -74.0060
        WHEN 5 THEN -118.2437 WHEN 6 THEN -122.4194 WHEN 7 THEN -87.6298 WHEN 8 THEN -71.0589 WHEN 9 THEN -112.0740
        WHEN 10 THEN -122.6784 WHEN 11 THEN -86.7816 WHEN 12 THEN -115.1398 WHEN 13 THEN -81.3792 WHEN 14 THEN -96.7970
        WHEN 15 THEN -95.3698 WHEN 16 THEN -84.3880 WHEN 17 THEN -75.1652 WHEN 18 THEN -83.0458 WHEN 19 THEN -93.2650
        WHEN 20 THEN -81.6944 WHEN 21 THEN -94.5786 WHEN 22 THEN -82.9988 WHEN 23 THEN -80.8431 WHEN 24 THEN -86.1581
    END as lng,
    'https://images.unsplash.com/photo-' || (1500000000 + random() % 100000000) || '?w=400&h=300&fit=crop' as image_url,
    (100000 + random() % 10000000) as price_sat,
    CASE (rowid % 2) WHEN 0 THEN 'fixed' ELSE 'make_offer' END as pricing_type,
    (SELECT id FROM users ORDER BY random() LIMIT 1) as posted_by,
    CASE WHEN random() % 10 = 0 THEN strftime('%s','now') + (random() % 14) * 86400 ELSE NULL END as boosted_until,
    strftime('%s','now') - (random() % 90) * 86400 as created_at,
    strftime('%s','now') - (random() % 30) * 86400 as updated_at,
    CASE WHEN random() % 20 = 0 THEN 'sold' WHEN random() % 20 = 1 THEN 'expired' ELSE 'active' END as status,
    random() % 500 as views
FROM (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t1,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t2,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t3,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t4,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t5,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t6,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t7,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t8,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t9,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t10,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t11,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t12,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t13,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t14,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t15,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t16,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t17,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t18,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t19,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t20
WHERE rowid < 1990;

-- ============================================================================
-- GENERATE LISTING IMAGES (3 images per listing for new listings)
-- ============================================================================

-- Generate images for listings 11-2000 (3 images each)
INSERT INTO listing_images (id, listing_id, image_url, image_order, created_at)
SELECT 
    'img' || printf('%06d', rowid + 13) as id,
    (rowid / 3) + 11 as listing_id,
    'https://images.unsplash.com/photo-' || (1500000000 + random() % 100000000) || '?w=400&h=300&fit=crop' as image_url,
    (rowid % 3) + 1 as image_order,
    strftime('%s','now') as created_at
FROM (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t1,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t2,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t3,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t4,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t5,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t6,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t7,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t8,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t9,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t10,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t11,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t12,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t13,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t14,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t15,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t16,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t17,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t18,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t19,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t20
WHERE rowid < 5970;

-- ============================================================================
-- GENERATE VIEW LOGS (realistic analytics for all listings)
-- ============================================================================

-- Generate view logs for all listings
INSERT INTO view_logs (id, listing_id, viewer_ip, viewer_session, viewed_at)
SELECT 
    'view' || printf('%06d', rowid + 6) as id,
    (random() % 2000) + 1 as listing_id,
    '192.168.' || (random() % 255) || '.' || (random() % 255) as viewer_ip,
    'session_' || substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) || 
    substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) || 
    substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) || 
    substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) || 
    substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) || 
    substr('abcdefghijklmnopqrstuvwxyz0123456789', abs(random()) % 36 + 1, 1) as viewer_session,
    strftime('%s','now') - (random() % 86400 * 30) as viewed_at
FROM (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t1,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t2,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t3,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t4,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t5,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t6,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t7,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t8,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t9,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t10,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t11,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t12,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t13,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t14,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t15,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t16,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t17,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t18,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t19,
     (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) t20
WHERE rowid < 10000;

PRAGMA foreign_keys = ON;

-- Display final seeding results
SELECT 'STAGING DATABASE COMPLETELY SEEDED' as status;
SELECT 'Total users: 200' as users_total;
SELECT 'Total listings: 2000' as listings_total;
SELECT 'Total images: 6000' as images_total;
SELECT 'Total view logs: 10000' as view_logs_total;
